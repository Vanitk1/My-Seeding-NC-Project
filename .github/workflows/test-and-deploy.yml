name: test and deploy

on:
  push:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test_user -d test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5 
    env:
      PGHOST: localhost
      PGUSER: test_user
      PGPASSWORD: test_password
      PGDATABASE: test_db

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Use Node.js v22.14.0
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -U test_user; do
            echo "Waiting for Postgresâ€¦"
            sleep 1
          done

      - name: Run tests
        run: npm test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Trigger Render deploy
        run: curl ${{ secrets.RENDER_DEPLOY_HOOK_URL }}